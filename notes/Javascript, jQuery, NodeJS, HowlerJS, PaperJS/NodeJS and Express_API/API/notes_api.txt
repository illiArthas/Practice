** Application Programming Interface (API) **

	API's are interfaces for code/computers to talk to one another.
	Web API's generally communicate via HTTP

** API's list **

	ifttt.com
	programmableweb.com

** JSON and XML **
	
	JSON and XML are just both formats, and nowadays most applications support
	both JSON and XML, but JSON is a more modern approach.

	XML - Extended Markup Language XML is syntacticly similar to HTML, but it does 
              not describe presentation like HTML. Meaning it's tags can be whatever 
	      your name it to be.
		
		<person>
			<age>21</age>
			<name>Levi</name>
			<city>Brisbane</city>
		</person>


	JSON - Javascript Object Notation, it looks exactly like Javascript Objects,
	       but everything is a string.

	       {
		  "person": {
			"age" : "21",
			 "name" : "Levi",
			"city" : "Brisbane"
		  }
	       }


** How to make an http request using js **
	
	* You will need a package called 'request', download it using npm install request *

		var request = require('request');

	// request parameters - error is error, response is the status code response
	// and body is the html data

	// Usually on the first parameter where 'http://www.google.com' is, that's
	// where you input the api url of something, so you can parse it into an object

		request('http://www.google.com', function(error, response, body) {
			
			// If there was an error loading the url
			if (error) {
				console.log("OOPS something went wrong.");
				console.log(error);

			} else {
				// HTTP status code 200 means the connection was OK
				if (response.statusCode == 200) {
					console.log(body);
				}
			}

			// OR OR

			if (!error && response.statusCode == 200) {
				console.log(body);
			}
		});


** Parsing JSON into a javascript Object **

		This is how you parse a JSON data into an object:
			JSON.parse(body);

		It will look like
		
			request('http://www.google.com', function(error, response, body) {
				var parseData = JSON.parse(body);
				console.log(body);
			});


		To access data from the parse JSON data, you use ["propertyName"]

			console.log(parseData["query"]["count"]);



