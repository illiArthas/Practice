********** Look at Exercise 28/Actual Exercise to find a very good example of using PaperJS and HowlerJS **********



** Include PaperJS **
			<script type="text/javascript" src="dist/paper-full.js">
			<script type="text/paperscript" canvas="myCanvas"></script>	// This is specific to paperjs, "myCanvas" is the id of the canvas
			OR	
			<script type="text/paperscript" src="js/myScript.js" canvas="myCanvas">


** To make the canvas stretch to Full screen **

			1. Create OR link a css
			2. Inside the CSS, type:
				canvas {
					width: 100%;
					height: 100%;
					background-color: green;
				}

				body, html {
					height: 100%;
					margin: 0;
				}

			3. Done.


** SHAPES BELOW **
			 Detailed explanation: http://paperjs.org/tutorials/paths/creating-predefined-shapes/
** To create a Circle **
			
			// First parameter is the 'x' position and second parameter is the 'y' position
			// the number '10' is the radius of the circle
			var myCircle = new Path.Circle(new Point(0,0), 10);
			myCircle.fillColor = "red";

** To create a Triangle **
		// AGAIN, first param 'x' and second param 'y' coordinates
		// Number '3' meats how many edges, and 20 means the size
		var triangle = new Path.Circle(new Point(200, 300), 3, 20);
		triangle.fillColor = "green";

** To check max height and width of screen usable for canvas

		alert(view.size);	// you can find the details
		alert(view.size.width);	// Better way of finding the width
		alert(view.size.height);// same as above, but for height

** To create a random point that's responsive to the screen, do

	var point = new Point(view.size.width, view.size.height) * Point.random();
	// variable 'point' means create a point whose 'x' is between 0 and the screen width,
	// and y is between 0 and the screen height


** To animate, for example a circle into different colour and then disappear **
	var myCircle = new Path.Circle(new Point(300, 200), 20);
	myCircle.fillColor = "green";

	// You will need the function in order for this to work
	function onFrame(event) {
		// This animates with different colour
		myCircle.fillColor.hue += 1;
		// This scales from its size to 0, for 0.9 seconds
		myCircle.scale(0.9);
	}

	

********* HowlerJS Below *************

** Include HowlerJS cdn **
		cdn Website: 	https://cdnjs.com/libraries/howler

		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.0.8/howler.min.js"></script>



** Most basic way of adding a sound **

	var sound = new Howl({
  		src: ['sound.mp3']
	});
	sound.play();

	/* OR	OR	OR	OR	OR	*/

	var sound2 = new Howl({
		src: ['mySound.mp3', 'apple.mp4'],
		autoplay: true,
		loop: true,
		volume: 0.5,
		onend: function() {
			console.log("Finished playing sounds!"); // Fires when the sound finishes playing.
		}
	}).play();
	
	/* OR	OR	OR	OR	OR	*/	

	// Fires when the sound finishes playing.
	sound2.on('end', function(){
  		console.log('Finished!');
	});



** Fire a sound when specific key is pressed **

	// With paperJS
	
	function onKeyDown(event) {
		if (event.key === "a") {
			sound.play();

		} else if (event.key == "s") {
			sound2.play();
		}
	}